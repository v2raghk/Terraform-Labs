Lab: Authenticate Terraform with Azure using Service Principal & Client Secret

Why Use This Method?

        This method allows Terraform to authenticate to Azure without interactive login, perfect for automation, CI/CD, or infrastructure as code.

Prerequisites

        Azure CLI installed
        Terraform installed
        Access to an Azure Subscription

Step 1: Login to Azure CLI

            Open your terminal (PowerShell or CMD) and run the command below:
            az login
            This opens a browser window to authenticate. Once logged in, it will return your active subscriptions.

Step 2: Get Your Subscription ID

    To get your current Subscription ID, run the command below:
    
        az account show --query id -o tsv
        Copy the output for use in the next step.

Step 3: Create Service Principal

        Replace <Subscription ID> in the command below with your actual ID:
        az ad sp create-for-rbac --role="Contributor" --scopes="/subscriptions/<Subscription ID>"

        Output:
          {
            "appId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "displayName": "azure-cli-xxx-xx-xx-xx-xx",
            "password": "Client Secret",
            "tenant": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }

Step 4: Set Environment Variables on Windows

        The below steps are for Windows computers. Steps would be different for Linux, MAC etc.
        Go to Start → Environment Variables → User Variables → New (perform this step for each variable)

    Set the following 4 variables:
    
          Variable Name	Value:
    
          ARM_CLIENT_ID	appId from output
          ARM_CLIENT_SECRET	password from output
          ARM_SUBSCRIPTION_ID	your Azure Subscription ID
          ARM_TENANT_ID	tenant from output
        
          These are read by Terraform automatically when present in the environment.

Step 5: Verify Terraform Authentication

        Create a file named main.tf:
        
        provider "azurerm" {
          features {}
        }
        
        resource "azurerm_resource_group" "example" {
          name     = "rg-example"
          location = "East US"
        }
        
        Run the command below one after the other:
        
        terraform init
        terraform plan
            terraform apply
        
        Terraform will now authenticate using the Service Principal and provision resources on Azure.

Security Tip

        Do not hardcode secrets in .tf files or check them into GitHub. Always use environment variables or secret stores like Azure Key Vault.

